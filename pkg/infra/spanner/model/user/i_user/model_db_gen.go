// Code generated by cue_gen. DO NOT EDIT.
package i_user

import (
	"time"

	"cloud.google.com/go/spanner"
)

// Table の名前を定義
const TableName = "i_user"

// カラム名の定義
const (
	ColumnCreatedAt = "created_at"
	ColumnEmail     = "email"
	ColumnName      = "name"
	ColumnUpdatedAt = "updated_at"
	ColumnUserId    = "user_id"
)

// プライマリーキー・カラムの配列
var (
	PrimaryKeys = []string{
		ColumnUserId,
	}
	Columns = []string{
		ColumnCreatedAt,
		ColumnEmail,
		ColumnName,
		ColumnUpdatedAt,
		ColumnUserId,
	}
)

// モデル定義
type Model struct {
	// 生成日時
	CreatedAt time.Time `json:"created_at" db:"created_at"`
	// メールアドレス
	Email string `json:"email" db:"email"`
	// 名前
	Name string `json:"name" db:"name"`
	// 更新日時
	UpdatedAt time.Time `json:"updated_at" db:"updated_at"`
	// ユーザーID
	UserId string `json:"user_id" db:"user_id"`
}

// NewModel - 新規作成
func New(
	UserId string,
	Email string,
	Name string,
) *Model {
	return &Model{
		UserId: UserId,
		Email:  Email,
		Name:   Name,
	}
}

// Insert 用 Mutation
func (m *Model) InsertMutation() *spanner.Mutation {
	return spanner.Insert(
		TableName,
		Columns,
		[]interface{}{
			m.CreatedAt, m.Email, m.Name, m.UpdatedAt, m.UserId,
		},
	)
}

// Update 用 Mutation
func (m *Model) UpdateMutation() *spanner.Mutation {
	return spanner.Update(
		TableName,
		Columns,
		[]interface{}{
			m.CreatedAt, m.Email, m.Name, m.UpdatedAt, m.UserId,
		},
	)
}

// Delete 用 Mutation
func (m *Model) DeleteMutation() *spanner.Mutation {
	pk := spanner.Key{
		m.UserId,
	}
	return spanner.Delete(TableName, pk)
}

// Bind - Spanner Row を構造体にマッピング
func (m *Model) Bind(row *spanner.Row) error {
	return row.ToStruct(m)
}
